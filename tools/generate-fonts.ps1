<#
Scans the media/ folder for .ttf files and regenerates fonts.lua
Usage: From the repository root run:
    pwsh.exe .\tools\generate-fonts.ps1
#>

$scriptDir = Split-Path -Parent $MyInvocation.MyCommand.Path
$repoRoot = Split-Path -Parent $scriptDir
$mediaDir = Join-Path $repoRoot 'media'
$outFile = Join-Path $repoRoot 'fonts.lua'

if (-not (Test-Path $mediaDir)) {
    Write-Error "media folder not found: $mediaDir"
    exit 1
}

$ttfFiles = Get-ChildItem -Path $mediaDir -Filter '*.ttf' | Sort-Object Name
if ($ttfFiles.Count -eq 0) {
    Write-Warning "No .ttf files found in $mediaDir"
}

$addonName = Split-Path -Leaf $repoRoot

$header = @"
-- This file is generated by tools/generate-fonts.ps1 â€” do not edit by hand
local ADDON_NAME = ...

local function RegisterArtisanFonts()
    local LSM = LibStub and LibStub("LibSharedMedia-3.0", true)
    if not LSM then return end

    local basePath = "Interface/AddOns/" .. ADDON_NAME .. "/media/"

    local fonts = {
"@

$entries = ""
foreach ($f in $ttfFiles) {
    $key = [System.IO.Path]::GetFileNameWithoutExtension($f.Name)
    # Replace spaces with dashes and normalize
    $safeKey = $key -replace '\s+', '-' -replace '[^A-Za-z0-9\-]', ''
    $file = $f.Name
    $line = "        { key = '" + $safeKey + "', file = '" + $file + "' },`n"
    $entries += $line
}

$footer = @"
    }

    for _, f in ipairs(fonts) do
        local path = basePath .. f.file
        LSM:Register("font", f.key, path)
    end
end

-- Expose the register function so artisan.lua can call it
Artisan_RegisterFonts = RegisterArtisanFonts
"@

$generated = $header + $entries + $footer
Set-Content -Path $outFile -Value $generated -Encoding UTF8
Write-Host "Generated $outFile with $($ttfFiles.Count) fonts."
